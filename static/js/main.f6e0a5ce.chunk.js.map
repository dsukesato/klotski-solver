{"version":3,"sources":["solver/types/Cell.ts","solver/types/Board.ts","ui/style-const.ts","ui/component/BlockTypeButtons.tsx","ui/component/BlockView.tsx","ui/component/BoardView.tsx","ui/component/BoardInput.tsx","ui/component/Answer.tsx","solver/Zobrist.ts","solver/BFS.ts","solver/sample-data.ts","ui/component/App.tsx","serviceWorker.js","index.js"],"names":["Cell","x","y","this","cell","scalar","num","add","UP","scalar_mul","DOWN","RIGHT","LEFT","Board","blocks","blanks","board","i","HEIGHT","forEach","block","ancher","map","Object","assign","concat","WIDTH","getBlock","undefined","type","isValidCell","findIndex","equals","move","new_board","clone","_bangMoveBlock","target_blank_index","getBlankIndex","direction","left","right","upper","downer","dest_ancher","Error","blank","Set","Array","keys","reduce","s","deleteBlank","delete","from","values","cells","split","parseInt","callback","BLOCK_COLORS","dot","vertical","horizontal","target","BlockIcon","width_px","CELL_SIZE_PX","BUTTON_CELL_SIZE_PX","height_px","StyledIcon","styled","div","BlockTypeButton","onClick","is_active","StyledButton","Button","css","variant","useCallback","BlockTypeButtons","onTypeSelect","buttons","key","ButtonGroup","orientation","aria-label","BlockView","is_translucent","move_animation","StyledBlock","keyframes","BoardView","translucent_blocks","ghost_move","className","onMouseUp","onCellMouseMove","getBlockKey","StyledBoard","BLOCK_MARGIN_PX","on_mouse_move","e","currentTarget","getBoundingClientRect","current_target_rect","mouse_pos","clientX","clientY","cell_x","Math","floor","cell_y","onMouseMove","StyledBoardInput","onBoardInput","useState","setBoard","selected_type","setSelectedType","hovered_cell","setHoveredCell","InputView","SubmitButton","throttle","disabled","calculateBlankCells","length","Answer","moves","current_move_index","setCurrentMoveIndex","current_board","useMemo","current_index","filter","_","moveBlock","getCurrentBoard","AnswerBoard","AnswerController","Zobrist","randoms","hashes","random","pow","block_index","hash","forEachBlock","getRandomsIndex","pre_hash","current_block","moved_block","has","calculatePossibleMoves","cell1","cell2","connectedCells","blank1","blank2","push","BFS","zobrist","current_game_states","getHash","move_history","isSolved","getFlipped","next_game_states","game_state","next_moves","next_move","next_hash","getMovedHash","moved_board","next_state","questions","basic1","easy1","easy1flipped","easy2","hard1","hard1flipped","impossible1","solved1","App","bfs_result","setBFSResult","result","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+OAAaA,EAAb,WASE,WAAYC,EAAWC,GAAY,yBAH1BD,OAGyB,OAFzBC,OAEyB,EAChCC,KAAKF,EAAIA,EACTE,KAAKD,EAAIA,EAXb,gDAcME,GACF,OAAO,IAAIJ,EAAKG,KAAKF,EAAIG,EAAKH,EAAGE,KAAKD,EAAIE,EAAKF,KAfnD,iCAkBaG,GACT,OAAO,IAAIL,EAAKG,KAAKF,EAAII,EAAQF,KAAKD,EAAIG,KAnB9C,6BAsBSD,GACL,OAAOD,KAAKF,IAAMG,EAAKH,GAAKE,KAAKD,IAAME,EAAKF,IAvBhD,8BA0BwB,IAAhBI,EAAe,uDAAT,EACV,OAAOH,KAAKI,IAAIP,EAAKQ,GAAGC,WAAWH,MA3BvC,+BA6ByB,IAAhBA,EAAe,uDAAT,EACX,OAAOH,KAAKI,IAAIP,EAAKU,KAAKD,WAAWH,MA9BzC,8BAgCwB,IAAhBA,EAAe,uDAAT,EACV,OAAOH,KAAKI,IAAIP,EAAKW,MAAMF,WAAWH,MAjC1C,6BAmCuB,IAAhBA,EAAe,uDAAT,EACT,OAAOH,KAAKI,IAAIP,EAAKY,KAAKH,WAAWH,MApCzC,iCAwCI,MAAM,OAAN,OAAcH,KAAKF,EAAnB,gBAA4BE,KAAKD,EAAjC,OAxCJ,0CA2CI,OAAe,IAAXC,KAAKF,EAAgB,SACT,IAAZE,KAAKF,EAAiB,OACX,IAAXE,KAAKD,EAAgB,QACT,IAAZC,KAAKD,EAAiB,KACnB,OA/CX,KAAaF,EACJQ,GAAW,IAAIR,EAAK,GAAI,GADpBA,EAEJU,KAAa,IAAIV,EAAK,EAAG,GAFrBA,EAGJW,MAAc,IAAIX,EAAK,EAAG,GAHtBA,EAIJY,KAAa,IAAIZ,GAAM,EAAG,GA+CpBA,QC5CFa,EAAb,WAQE,cAQI,IAAD,OAPDC,EAOC,EAPDA,OACAC,EAMC,EANDA,OACAC,EAKC,EALDA,MASA,GAJC,yBAZMA,WAYN,OAXMF,YAWN,OAVMC,YAUN,EACDZ,KAAKW,OAASA,EACdX,KAAKY,OAASA,EAEVC,EACFb,KAAKa,MAAQA,MACR,CACLb,KAAKa,MAAQ,GACb,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAMK,OAAQD,IAAKd,KAAKa,MAAMC,GAAK,GACvDH,EAAOK,SAAQ,SAACC,GACd,EAAKJ,MAAMI,EAAMC,OAAOnB,GAAGkB,EAAMC,OAAOpB,GAAKmB,MA1BrD,oDAgCI,OAAO,IAAIP,EAAM,CACfC,OAAQX,KAAKW,OAAOQ,KAAI,SAACrB,GAAD,OAAOsB,OAAOC,OAAO,GAAIvB,MACjDc,OAAQZ,KAAKY,OAAOU,aAlC1B,kCAsCcrB,GACV,OACEA,EAAKH,GAAK,GACVG,EAAKH,EAAIY,EAAMa,OACftB,EAAKF,GAAK,GACVE,EAAKF,EAAIW,EAAMK,SA3CrB,iCAgDI,IAAME,EAAQjB,KAAKwB,SAAS,IAAI3B,EAAK,EAAG,IACxC,YAAiB4B,IAAVR,GAAsC,WAAfA,EAAMS,OAjDxC,+BAoDWzB,GACP,GAAID,KAAK2B,YAAY1B,GAAO,OAAOD,KAAKa,MAAMZ,EAAKF,GAAGE,EAAKH,KArD/D,oCAwDgBG,GACZ,OAAOD,KAAKY,OAAOgB,WAAU,SAAC9B,GAAD,OAAOG,EAAK4B,OAAO/B,QAzDpD,gCA4DYgC,GACR,IAAMC,EAAY/B,KAAKgC,QAEvB,OADAD,EAAUE,eAAeH,GAClBC,IA/DX,qCAmEiBD,GACb,IAAMZ,EAASY,EAAKb,MAAMC,OACpBD,EAAQjB,KAAKwB,SAASN,GAC5B,QAAcO,IAAVR,EAAJ,CAGA,OAAQA,EAAMS,MACZ,IAAK,MACH,IAAMQ,EAAqBlC,KAAKmC,cAC9BjB,EAAOd,IAAI0B,EAAKM,YAElBpC,KAAKY,OAAOsB,GAAsBhB,EAClC,MACF,IAAK,aACH,IAA0B,IAAtBY,EAAKM,UAAUtC,EAAU,CAE3B,IAAMoC,EAAqBlC,KAAKmC,cAAcjB,EAAOmB,QACrDrC,KAAKY,OAAOsB,GAAsBhB,EAAOoB,aACpC,GAAyB,IAArBR,EAAKM,UAAUtC,EAAS,CAEjC,IAAMoC,EAAqBlC,KAAKmC,cAAcjB,EAAOoB,MAAM,IAC3DtC,KAAKY,OAAOsB,GAAsBhB,OAIlClB,KAAKY,OAAO,GAAKM,EACjBlB,KAAKY,OAAO,GAAKZ,KAAKY,OAAO,GAAG0B,QAElC,MACF,IAAK,WACH,IAA0B,IAAtBR,EAAKM,UAAUrC,EAAU,CAE3B,IAAMmC,EAAqBlC,KAAKmC,cAAcjB,EAAOqB,SACrDvC,KAAKY,OAAOsB,GAAsBhB,EAAOsB,cACpC,GAAyB,IAArBV,EAAKM,UAAUrC,EAAS,CAEjC,IAAMmC,EAAqBlC,KAAKmC,cAAcjB,EAAOsB,OAAO,IAC5DxC,KAAKY,OAAOsB,GAAsBhB,QACH,IAAtBY,EAAKM,UAAUtC,GAIM,IAArBgC,EAAKM,UAAUtC,KAFxBE,KAAKY,OAAO,GAAKM,EACjBlB,KAAKY,OAAO,GAAKZ,KAAKY,OAAO,GAAG4B,UAMlC,MACF,IAAK,UACuB,IAAtBV,EAAKM,UAAUrC,GAEjBC,KAAKY,OAAO,GAAKM,EAAOsB,SACxBxC,KAAKY,OAAO,GAAKZ,KAAKY,OAAO,GAAG0B,SACF,IAArBR,EAAKM,UAAUrC,GAExBC,KAAKY,OAAO,GAAKM,EACjBlB,KAAKY,OAAO,GAAKZ,KAAKY,OAAO,GAAG0B,UACD,IAAtBR,EAAKM,UAAUtC,GAExBE,KAAKY,OAAO,GAAKM,EAAOoB,QACxBtC,KAAKY,OAAO,GAAKZ,KAAKY,OAAO,GAAG4B,UACF,IAArBV,EAAKM,UAAUtC,IAExBE,KAAKY,OAAO,GAAKM,EACjBlB,KAAKY,OAAO,GAAKZ,KAAKY,OAAO,GAAG4B,UAMtC,IAAMC,EAAcvB,EAAOd,IAAI0B,EAAKM,WACpCpC,KAAKa,MAAMK,EAAOnB,GAAGmB,EAAOpB,QAAK2B,EACjCzB,KAAKa,MAAM4B,EAAY1C,GAAG0C,EAAY3C,GAAKmB,EAC3CA,EAAMC,OAASuB,KA5InB,mCA8KI,OAAO,IAAI/B,EAAM,CAAEC,OA9BWX,KAAKW,OAAOQ,KACxC,SAACF,GACC,GAAmB,QAAfA,EAAMS,MAAiC,aAAfT,EAAMS,KAChC,MAAO,CACLA,KAAMT,EAAMS,KACZR,OAAQ,IAAIrB,EAAK,EAAIoB,EAAMC,OAAOpB,EAAGmB,EAAMC,OAAOnB,IAGtD,OAAQkB,EAAMC,OAAOpB,GACnB,KAAK,EACH,MAAO,CACL4B,KAAMT,EAAMS,KACZR,OAAQ,IAAIrB,EAAK,EAAGoB,EAAMC,OAAOnB,IAErC,KAAK,EACH,OAAOqB,OAAOC,OAAO,GAAIJ,GAC3B,KAAK,EACH,MAAO,CACLS,KAAMT,EAAMS,KACZR,OAAQ,IAAIrB,EAAK,EAAGoB,EAAMC,OAAOnB,IAErC,QACE,MAAM,IAAI2C,MAAM,qCAQmB9B,OAJVZ,KAAKY,OAAOO,KAC3C,SAACwB,GAAD,OAAW,IAAI9C,EAAK,EAAI8C,EAAM7C,EAAG6C,EAAM5C,UA3K7C,4CAkLI,IAAMa,EAAsB,IAAIgC,IAC9B,YAAIC,MAAMnC,EAAMa,OAAOuB,QACpB3B,KAAI,SAACrB,GAAD,OAAO,YAAI+C,MAAMnC,EAAMK,QAAQ+B,QAAQ3B,KAAI,SAACpB,GAAD,gBAAUD,EAAV,YAAeC,SAC9DgD,QAAO,SAACC,EAAGlD,GAAJ,4BAAckD,GAAd,YAAoBlD,QAG1BmD,EAAc,SAAChD,GACnBW,EAAOsC,OAAP,UAAiBjD,EAAKH,EAAtB,YAA2BG,EAAKF,KA0BlC,OAvBAC,KAAKW,OAAOK,SAAQ,SAACC,GACnB,IAAMC,EAAeD,EAAMC,OAC3B,OAAQD,EAAMS,MACZ,IAAK,MACHuB,EAAY/B,GACZ,MACF,IAAK,aACH+B,EAAY/B,GACZ+B,EAAY/B,EAAOoB,SACnB,MACF,IAAK,WACHW,EAAY/B,GACZ+B,EAAY/B,EAAOsB,UACnB,MACF,IAAK,SACHS,EAAY/B,GACZ+B,EAAY/B,EAAOoB,SACnBW,EAAY/B,EAAOsB,UACnBS,EAAY/B,EAAOoB,QAAQE,cAK1BK,MAAMM,KAAKvC,EAAOwC,UAAUjC,KAAI,SAAClB,GACtC,IAAMoD,EAAQpD,EAAKqD,MAAM,KACzB,OAAO,IAAIzD,EAAK0D,SAASF,EAAM,IAAKE,SAASF,EAAM,UArNzD,mCA0NIG,GAEAxD,KAAKW,OAAOK,QAAQwC,OA5NxB,KAAa9C,EACJa,MAAgB,EADZb,EAEJK,OAAiB,EA8NXL,Q,+BCnOF+C,EAAmD,CAC9DC,IAAK,UACLC,SAAU,UACVC,WAAY,UACZC,OAAQ,W,yXCOV,IAAMC,EAAqC,SAAC,GAAc,IAAZpC,EAAW,EAAXA,KACtCqC,EACK,QAATrC,GAA2B,aAATA,EDNasC,KCQ3BC,GACAC,EACK,QAATxC,GAA2B,eAATA,EDVasC,KCY3BC,GAEAE,EAAaC,IAAOC,IAAV,IACLN,EACCG,EACIT,EAAa/B,IAE7B,OAAO,kBAACyC,EAAD,OAIHG,EAID,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAAS7C,EAAsB,EAAtBA,KAAM8C,EAAgB,EAAhBA,UACfC,EAAeL,YAAOM,IAAPN,CAAH,IANCH,GAQPA,GAERO,EACEG,YADO,KAIP,MAGN,OACE,kBAACF,EAAD,CACEG,QAAQ,WACRL,QAASM,uBAAY,kBAAMN,EAAQ7C,KAAO,CAAC6C,EAAS7C,KAEpD,kBAAC,EAAD,CAAWA,KAAMA,MA8BRoD,EAtBV,SAAC,GAA4B,IAA1BpD,EAAyB,EAAzBA,KAAMqD,EAAmB,EAAnBA,aAENC,EAD2B,CAAC,MAAO,aAAc,WAAY,UACvC7D,KAAI,SAACrB,GAAD,OAC9B,kBAAC,EAAD,CACE4B,KAAM5B,EACN0E,UAAW9C,IAAS5B,EACpByE,QAASQ,EACTE,IAAKnF,OAIT,OACE,kBAACoF,EAAA,EAAD,CACEC,YAAY,WACZP,QAAQ,OACRQ,aAAW,0CAEVJ,I,4pBCvEP,IAkDeK,EAlCV,SAAC,GAA+C,IAhB5BjD,EAgBjBnB,EAA4C,EAA5CA,MAAOqE,EAAqC,EAArCA,eAAgBC,EAAqB,EAArBA,eACvB7D,EAAOT,EAAMS,KACbqC,EACK,QAATrC,GAA2B,aAATA,EF1BM,GE4BpBsC,IACAE,EACK,QAATxC,GAA2B,eAATA,EF9BM,GEgCpBsC,IAEAwB,EAAcpB,IAAOC,IAAV,IFjCY,GEoC3B,GAAmCpD,EAAMC,OAAOnB,EFpCrB,GEsC3B,GAAmCkB,EAAMC,OAAOpB,EACvCiE,EACCG,EACIT,EAAa/B,GAGhB4D,EAAiB,GAAM,EAGhCC,EACEZ,YADY,KAzCKvC,EA2CcmD,EA3CME,YAApB,IAMnB,GAAArD,EAAUtC,EACL,GAAAsC,EAAUrC,KAsCb,MAEN,OAAO,kBAACyF,EAAD,O,mXC/CT,IAuFeE,EAhFV,SAAC,GAOC,IANL7E,EAMI,EANJA,MACA8E,EAKI,EALJA,mBACAC,EAII,EAJJA,WACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,UACAC,EACI,EADJA,gBAEMC,EAAc,SAAC/E,GAAD,OAA0BA,EAAMS,KAAOT,EAAMC,QAC3DP,EAASE,EAAMF,OAAOQ,KAAI,SAACrB,GAAD,OAC9B,kBAAC,EAAD,CAAWmB,MAAOnB,EAAGmF,IAAKe,EAAYlG,QAGlCiE,EH1BuB,GG2BT,GAAmCrD,EAAMa,MACvD2C,EH5BuB,GG6BT,GAAmCxD,EAAMK,OACvDkF,EAAc7B,IAAOC,IAAV,IAENN,EACCG,EAMDA,EACCF,GACCkC,KAMPC,EAAgBtB,uBACpB,SAACuB,GACC,GAAKA,EAAEC,cAAcC,sBAArB,CAEA,IAAMC,EAAsBH,EAAEC,cAAcC,wBACtCE,EACDJ,EAAEK,QAAUF,EAAoBzG,EAD/B0G,EAEDJ,EAAEM,QAAUH,EAAoBxG,EAE/B4G,EAASC,KAAKC,OACjBL,EAAcN,GAAf,IAEIY,EAASF,KAAKC,OACjBL,EAAcN,GAAf,IAEIjG,EAAO,IAAIJ,EACf8G,EAAS,EAAI,EAAIA,EAASjG,EAAMa,MAAQ,EAAIb,EAAMa,MAAQ,EAAIoF,EAC9DG,EAAS,EAAI,EAAIA,EAASpG,EAAMK,OAAS,EAAIL,EAAMK,OAAS,EAAI+F,QAE1CrF,IAApBsE,GAA+BA,EAAgB9F,MAErD,CAAC8F,IAGH,OACE,kBAACE,EAAD,CACEJ,UAAWA,GAAwB,GACnCC,UAAWA,EACXiB,YAAaZ,GAEZxF,EACAgF,EACGA,EAAmBxE,KAAI,SAACrB,GAAD,OACrB,kBAAC,EAAD,CAAWmB,MAAOnB,EAAGwF,gBAAgB,EAAML,IAAKe,EAAYlG,QAE9D,KACH8F,EACC,kBAAC,EAAD,CACE3E,MAAO2E,EAAW3E,MAClBsE,eAAc,OAAEK,QAAF,IAAEA,OAAF,EAAEA,EAAYxD,YAE5B,O,iYChFV,IAwEe4E,EANU5C,aA/DpB,SAAC,GAAiC,IAA/ByB,EAA8B,EAA9BA,UAAWoB,EAAmB,EAAnBA,aAAmB,EACVC,mBACxB,IAAIxG,EAAM,CACRC,OAAQ,GACRC,OAAQ,CAAC,IAAIf,EAAK,EAAG,GAAI,IAAIA,EAAK,EAAG,OAJL,mBAC7BgB,EAD6B,KACtBsG,EADsB,OAOKD,mBAAwB,OAP7B,mBAO7BE,EAP6B,KAOdC,EAPc,OAQGH,mBAAe,IAAIrH,EAAK,EAAG,IAR9B,mBAQ7ByH,EAR6B,KAQfC,EARe,KAU9BC,EAAYpD,IAAOC,IAAV,KAKToD,EAAerD,YAAOM,IAAPN,CAAH,KAIlB,OACE,yBAAKyB,UAAS,sBAAiBA,IAC7B,kBAAC2B,EAAD,KACE,kBAAC,EAAD,CACE9F,KAAM0F,EACNrC,aAAcF,uBAAY,SAACnD,GACzB2F,EAAgB3F,KACf,MAEL,kBAAC,EAAD,CACEoE,UAAW,WACTqB,EACE,IAAIzG,EAAM,CACRC,OAAO,GAAD,mBACDE,EAAMF,QADL,CAEJ,CAAEe,KAAM0F,EAAelG,OAAQoG,KAEjC1G,OAAQC,EAAMD,WAIpBmF,gBAAiBlB,sBAAY6C,YAAS,IAAKH,GAAiB,IAC5D1G,MAAOA,EACP8E,mBAAoB,CAAC,CAAEjE,KAAM0F,EAAelG,OAAQoG,OAGxD,kBAACG,EAAD,CACEE,SAAiD,IAAvC9G,EAAM+G,sBAAsBC,OACtCjD,QAAQ,YACRL,QAAS,kBACP0C,EACE,IAAIvG,EAAM,CACRC,OAAQE,EAAMF,OACdC,OAAQC,EAAM+G,2BAPtB,aAkBmBxD,CAAH,K,kOCnEtB,IAmDe0D,EA1CqC,SAAC,GAAsB,IAApBjH,EAAmB,EAAnBA,MAAOkH,EAAY,EAAZA,MAAY,EACtBb,mBAAS,GADa,mBACjEc,EADiE,KAC7CC,EAD6C,KAElEC,EAAgBC,mBACpB,kBAZoB,SACtBtH,EACAkH,EACAK,GAHsB,OAKtBL,EACGM,QAAO,SAACC,EAAGxH,GAAJ,OAAUA,EAAIsH,KACrBrF,QAAO,SAAClC,EAAciB,GAAf,OAAqCjB,EAAM0H,UAAUzG,KAAOjB,GAK9D2H,CAAgB3H,EAAOkH,EAAOC,KACpC,CAACnH,EAAOkH,EAAOC,IAGXS,EAAcrE,YAAOsB,EAAPtB,CAAH,KAIXsE,EAAmBtE,IAAOC,IAAV,KAItB,OACE,yBAAKwB,UAAU,UACb,kBAAC4C,EAAD,CACE5H,MAAOqH,EACPtC,WAAYmC,EAAMC,KAEpB,kBAACU,EAAD,KACE,kBAAChE,EAAA,EAAD,CACEiD,SAAUK,GAAsB,EAChCzD,QAAS,kBAAM0D,EAAoBD,EAAqB,KAExD,kBAAC,IAAD,OAEF,8BACGA,EAAqB,EADxB,MAC8BD,EAAMF,QAEpC,kBAACnD,EAAA,EAAD,CACEiD,SAAUK,GAAsBD,EAAMF,OAAS,EAC/CtD,QAAS,kBAAM0D,EAAoBD,EAAqB,KAExD,kBAAC,IAAD,U,gBCYKW,EA5Df,WAIE,aAAe,yBAHNC,aAGK,OAFLC,YAEK,EAEZ7I,KAAK4I,QAAU,YAAI/F,MAAM,IAAIC,QAAQ3B,KAAI,SAACmH,GAAD,OACvC/E,SAAUqD,KAAKkC,SAAWlC,KAAKmC,IAAI,EAAG,QAExC/I,KAAK6I,OAAS,IAAIjG,IATtB,4DAckB3B,GACd,IAAM+H,EAAc,CAClBtF,IAAK,EACLE,WAAY,EACZD,SAAU,EACVE,OAAQ,GACR5C,EAAMS,MAGR,OAAoB,GAFDT,EAAMC,OAAOnB,EAAIW,EAAMa,MAAQN,EAAMC,OAAOpB,GAEvCkJ,IAvB5B,8BA4BUnI,GAAqB,IAAD,OACtBoI,EAAO,EAIX,OAHApI,EAAMqI,cAAa,SAACjI,GAClBgI,GAAQ,EAAKL,QAAQ,EAAKO,gBAAgBlI,OAErCgI,IAjCX,mCAoCeG,EAAgBtH,GAC3B,IAAMuH,EAAgBvH,EAAKb,MAC3B,QAAsBQ,IAAlB4H,EAAJ,CACA,IAAMC,EAAkB,eACnBD,EADmB,CAEtBnI,OAAQmI,EAAcnI,OAAOd,IAAI0B,EAAKM,aAOxC,OAJEgH,EACApJ,KAAK4I,QAAQ5I,KAAKmJ,gBAAgBE,IAClCrJ,KAAK4I,QAAQ5I,KAAKmJ,gBAAgBG,OA9CxC,0BAmDML,GACFjJ,KAAK6I,OAAOzI,IAAI6I,KApDpB,0BAuDMA,GACF,OAAOjJ,KAAK6I,OAAOU,IAAIN,OAxD3B,KCaaO,EAAyB,SAAC3I,GACrC,IAbA4I,EACAC,EAYI3B,EAAgB,GACd4B,GAdNF,EAcyC5I,EAAMD,OAAO,GAbtD8I,EAa0D7I,EAAMD,OAAO,GAXnE6I,EAAMlH,QAAQV,OAAO6H,IAAUD,EAAMjH,SAASX,OAAO6H,GAChD,cACED,EAAMnH,QAAQT,OAAO6H,KAAUD,EAAMpH,OAAOR,OAAO6H,KACrD,cASLE,EAAS/I,EAAMD,OAAO,GACxBiJ,EAAShJ,EAAMD,OAAO,GAgBxB,GAfIC,EAAMD,OAAO,GAAGd,IAAMe,EAAMD,OAAO,GAAGd,EACpCe,EAAMD,OAAO,GAAGb,EAAIc,EAAMD,OAAO,GAAGb,GACtC6J,EAAS/I,EAAMD,OAAO,GACtBiJ,EAAShJ,EAAMD,OAAO,IACbC,EAAMD,OAAO,GAAGb,EAAIc,EAAMD,OAAO,GAAGb,IAC7C6J,EAAS/I,EAAMD,OAAO,GACtBiJ,EAAShJ,EAAMD,OAAO,IAEfC,EAAMD,OAAO,GAAGd,EAAIe,EAAMD,OAAO,GAAGd,GAC7C8J,EAAS/I,EAAMD,OAAO,GACtBiJ,EAAShJ,EAAMD,OAAO,IACbC,EAAMD,OAAO,GAAGd,EAAIe,EAAMD,OAAO,GAAGd,IAC7C8J,EAAS/I,EAAMD,OAAO,GACtBiJ,EAAShJ,EAAMD,OAAO,IAEpB+I,EAAgB,CAGhB,IAAI1I,EADN,GAAuB,eAAnB0I,OAKYlI,KADdR,EAAQJ,EAAMW,SAASoI,EAAOvH,KAAK,MACO,eAAfpB,EAAMS,MAE/BqG,EAAM+B,KAAK,CAAE7I,QAAOmB,UAAWvC,EAAKW,aAIxBiB,KADdR,EAAQJ,EAAMW,SAASoI,EAAOvH,KAAK,MACO,QAAfpB,EAAMS,MAC/BqG,EAAM+B,KAAK,CAAE7I,QAAOmB,UAAWvC,EAAKW,cAIzBiB,KAFbR,EAAQJ,EAAMW,SAASoI,EAAOrH,MAAM,MAEK,aAAftB,EAAMS,WACnBD,IAAVR,GAAsC,WAAfA,EAAMS,OAE9BqG,EAAM+B,KAAK,CAAE7I,QAAOmB,UAAWvC,EAAKU,aAIzBkB,KAFbR,EAAQJ,EAAMW,SAASoI,EAAOrH,MAAM,MAEK,QAAftB,EAAMS,WACnBD,IAAVR,GAAsC,eAAfA,EAAMS,OAE9BqG,EAAM+B,KAAK,CAAE7I,QAAOmB,UAAWvC,EAAKU,aAIzBkB,KAFbR,EAAQJ,EAAMW,SAASoI,EAAOpH,OAAO,MAEI,QAAfvB,EAAMS,WACnBD,IAAVR,GAAsC,eAAfA,EAAMS,WACnBD,IAAVR,GAAsC,aAAfA,EAAMS,WACnBD,IAAVR,GAAsC,WAAfA,EAAMS,OAE9BqG,EAAM+B,KAAK,CAAE7I,QAAOmB,UAAWvC,EAAKQ,UAGxBoB,KADdR,EAAQJ,EAAMW,SAASqI,EAAOtH,MAAM,MACM,aAAftB,EAAMS,MAC/BqG,EAAM+B,KAAK,CAAE7I,QAAOmB,UAAWvC,EAAKU,YAGxBkB,KADdR,EAAQJ,EAAMW,SAASqI,EAAOtH,MAAM,MACM,QAAftB,EAAMS,MAC/BqG,EAAM+B,KAAK,CAAE7I,QAAOmB,UAAWvC,EAAKU,aAIzBkB,KAFbR,EAAQJ,EAAMW,SAASqI,EAAOrH,OAAO,MAEI,QAAfvB,EAAMS,WACnBD,IAAVR,GAAsC,aAAfA,EAAMS,OAE9BqG,EAAM+B,KAAK,CAAE7I,QAAOmB,UAAWvC,EAAKQ,WAIzBoB,KAFbR,EAAQJ,EAAMW,SAASqI,EAAOvH,MAAM,MAEK,QAAfrB,EAAMS,WACnBD,IAAVR,GAAsC,eAAfA,EAAMS,OAE9BqG,EAAM+B,KAAK,CAAE7I,QAAOmB,UAAWvC,EAAKY,YACjC,GAAuB,aAAnBkJ,EAA+B,CACxC,IAAI1I,QAISQ,KAFbR,EAAQJ,EAAMW,SAASoI,EAAOvH,KAAK,MAEM,eAAfpB,EAAMS,WACnBD,IAAVR,GAAsC,WAAfA,EAAMS,OAE9BqG,EAAM+B,KAAK,CAAE7I,QAAOmB,UAAWvC,EAAKW,cAKzBiB,KAFbR,EAAQJ,EAAMW,SAASoI,EAAOvH,KAAK,MAEM,QAAfpB,EAAMS,WACnBD,IAAVR,GAAsC,aAAfA,EAAMS,OAE9BqG,EAAM+B,KAAK,CAAE7I,QAAOmB,UAAWvC,EAAKW,aAGxBiB,KADdR,EAAQJ,EAAMW,SAASqI,EAAOxH,KAAK,MACO,eAAfpB,EAAMS,MAC/BqG,EAAM+B,KAAK,CAAE7I,QAAOmB,UAAWvC,EAAKW,aAGxBiB,KADdR,EAAQJ,EAAMW,SAASqI,EAAOxH,KAAK,MACO,QAAfpB,EAAMS,MAC/BqG,EAAM+B,KAAK,CAAE7I,QAAOmB,UAAWvC,EAAKW,aAGxBiB,KADdR,EAAQJ,EAAMW,SAASoI,EAAOrH,MAAM,MACM,aAAftB,EAAMS,MAC/BqG,EAAM+B,KAAK,CAAE7I,QAAOmB,UAAWvC,EAAKU,YAGxBkB,KADdR,EAAQJ,EAAMW,SAASoI,EAAOrH,MAAM,MACM,QAAftB,EAAMS,MAC/BqG,EAAM+B,KAAK,CAAE7I,QAAOmB,UAAWvC,EAAKU,aAIzBkB,KAFbR,EAAQJ,EAAMW,SAASqI,EAAOrH,OAAO,MAEI,QAAfvB,EAAMS,WACnBD,IAAVR,GAAsC,aAAfA,EAAMS,OAE9BqG,EAAM+B,KAAK,CAAE7I,QAAOmB,UAAWvC,EAAKQ,WAIzBoB,KAFbR,EAAQJ,EAAMW,SAASoI,EAAOtH,MAAM,MAEK,QAAfrB,EAAMS,WACnBD,IAAVR,GAAsC,eAAfA,EAAMS,WACnBD,IAAVR,GAAsC,aAAfA,EAAMS,WACnBD,IAAVR,GAAsC,WAAfA,EAAMS,OAE9BqG,EAAM+B,KAAK,CAAE7I,QAAOmB,UAAWvC,EAAKY,aAIzBgB,KAFbR,EAAQJ,EAAMW,SAASqI,EAAOvH,MAAM,MAEK,QAAfrB,EAAMS,WACnBD,IAAVR,GAAsC,eAAfA,EAAMS,OAE9BqG,EAAM+B,KAAK,CAAE7I,QAAOmB,UAAWvC,EAAKY,YAEnC,qBAEeI,EAAMD,QAFrB,IAEL,2BAAkC,CAAC,IAAxB+B,EAAuB,QAC5B1B,OAAwB,OAGdQ,KADdR,EAAQJ,EAAMW,SAASmB,EAAMN,KAAK,MACQ,eAAfpB,EAAMS,MAC/BqG,EAAM+B,KAAK,CAAE7I,QAAOmB,UAAWvC,EAAKW,aAIxBiB,KADdR,EAAQJ,EAAMW,SAASmB,EAAMN,KAAK,MACQ,QAAfpB,EAAMS,MAC/BqG,EAAM+B,KAAK,CAAE7I,QAAOmB,UAAWvC,EAAKW,aAGxBiB,KADdR,EAAQJ,EAAMW,SAASmB,EAAMJ,MAAM,MACO,aAAftB,EAAMS,MAC/BqG,EAAM+B,KAAK,CAAE7I,QAAOmB,UAAWvC,EAAKU,YAGxBkB,KADdR,EAAQJ,EAAMW,SAASmB,EAAMJ,MAAM,MACO,QAAftB,EAAMS,MAC/BqG,EAAM+B,KAAK,CAAE7I,QAAOmB,UAAWvC,EAAKU,aAIzBkB,KAFbR,EAAQJ,EAAMW,SAASmB,EAAMH,OAAO,MAEK,QAAfvB,EAAMS,WACnBD,IAAVR,GAAsC,aAAfA,EAAMS,OAE9BqG,EAAM+B,KAAK,CAAE7I,QAAOmB,UAAWvC,EAAKQ,WAIzBoB,KAFbR,EAAQJ,EAAMW,SAASmB,EAAML,MAAM,MAEM,QAAfrB,EAAMS,WACnBD,IAAVR,GAAsC,eAAfA,EAAMS,OAE9BqG,EAAM+B,KAAK,CAAE7I,QAAOmB,UAAWvC,EAAKY,QAlCnC,+BAqCP,OAAOsH,GAyDMgC,EAhDI,SAAClJ,GAClB,IAAMmJ,EAAU,IAAIrB,EAEhBsB,EAAmC,CACrC,CACEpJ,QACAoI,KAAMe,EAAQE,QAAQrJ,GACtBsJ,aAAc,KAGlB,GAAItJ,EAAMuJ,WAAY,OAAOH,EAAoB,GAAGE,aAKpD,IAHAH,EAAQ5J,IAAI6J,EAAoB,GAAGhB,MACnCe,EAAQ5J,IAAI4J,EAAQE,QAAQrJ,EAAMwJ,eAEI,IAA/BJ,EAAoBpC,QAAc,CACvC,IADuC,EACnCyC,EAAgC,GADG,cAGdL,GAHc,IAGvC,2BAA8C,CAAC,IAAD,EAAnCM,EAAmC,QACtCC,EAAahB,EAAuBe,EAAW1J,OADT,cAEpB2J,GAFoB,IAE5C,2BAAoC,CAAC,IAA1BC,EAAyB,QAC5BC,EAAYV,EAAQW,aAAaJ,EAAWtB,KAAMwB,GACxD,QAAkBhJ,IAAdiJ,EAAyB,MAAM,IAAIhI,MAAM,mBAE7C,IAAKsH,EAAQT,IAAImB,GAAY,CAC3BV,EAAQ5J,IAAIsK,GACZ,IAAME,EAAcL,EAAW1J,MAAM0H,UAAUkC,GAC/CT,EAAQ5J,IAAI4J,EAAQE,QAAQU,EAAYP,eAExC,IAAMQ,EAAwB,CAC5BhK,MAAO+J,EACP3B,KAAMyB,EAENP,aAAa,GAAD,mBAAMI,EAAWJ,cAAjB,CAA+BM,KAG7C,GAAII,EAAWhK,MAAMuJ,WAAY,OAAOS,EAAWV,aAEnDG,EAAiBR,KAAKe,KApBkB,gCAHP,8BA4BvCZ,EAAsBK,EAExB,MAAO,aClPIQ,EAAY,CAEvBC,OAAQ,IAAIrK,EAAM,CAChBC,OAAQ,CACN,CAAEe,KAAM,MAAOR,OAAQ,IAAIrB,EAAK,EAAG,IACnC,CAAE6B,KAAM,MAAOR,OAAQ,IAAIrB,EAAK,EAAG,IACnC,CAAE6B,KAAM,MAAOR,OAAQ,IAAIrB,EAAK,EAAG,IACnC,CAAE6B,KAAM,MAAOR,OAAQ,IAAIrB,EAAK,EAAG,IACnC,CAAE6B,KAAM,aAAcR,OAAQ,IAAIrB,EAAK,EAAG,IAC1C,CAAE6B,KAAM,WAAYR,OAAQ,IAAIrB,EAAK,EAAG,IACxC,CAAE6B,KAAM,WAAYR,OAAQ,IAAIrB,EAAK,EAAG,IACxC,CAAE6B,KAAM,WAAYR,OAAQ,IAAIrB,EAAK,EAAG,IACxC,CAAE6B,KAAM,WAAYR,OAAQ,IAAIrB,EAAK,EAAG,IACxC,CAAE6B,KAAM,SAAUR,OAAQ,IAAIrB,EAAK,EAAG,KAExCe,OAAQ,CAAC,IAAIf,EAAK,EAAG,GAAI,IAAIA,EAAK,EAAG,MAGvCmL,MAAO,IAAItK,EAAM,CACfC,OAAQ,CACN,CAAEe,KAAM,MAAOR,OAAQ,IAAIrB,EAAK,EAAG,IACnC,CAAE6B,KAAM,MAAOR,OAAQ,IAAIrB,EAAK,EAAG,IACnC,CAAE6B,KAAM,MAAOR,OAAQ,IAAIrB,EAAK,EAAG,IACnC,CAAE6B,KAAM,MAAOR,OAAQ,IAAIrB,EAAK,EAAG,IACnC,CAAE6B,KAAM,aAAcR,OAAQ,IAAIrB,EAAK,EAAG,IAC1C,CAAE6B,KAAM,aAAcR,OAAQ,IAAIrB,EAAK,EAAG,IAC1C,CAAE6B,KAAM,aAAcR,OAAQ,IAAIrB,EAAK,EAAG,IAC1C,CAAE6B,KAAM,aAAcR,OAAQ,IAAIrB,EAAK,EAAG,IAC1C,CAAE6B,KAAM,aAAcR,OAAQ,IAAIrB,EAAK,EAAG,IAC1C,CAAE6B,KAAM,SAAUR,OAAQ,IAAIrB,EAAK,EAAG,KAExCe,OAAQ,CAAC,IAAIf,EAAK,EAAG,GAAI,IAAIA,EAAK,EAAG,MAGvCoL,aAAc,IAAIvK,EAAM,CACtBC,OAAQ,CACN,CAAEe,KAAM,MAAOR,OAAQ,IAAIrB,EAAK,EAAG,IACnC,CAAE6B,KAAM,MAAOR,OAAQ,IAAIrB,EAAK,EAAG,IACnC,CAAE6B,KAAM,MAAOR,OAAQ,IAAIrB,EAAK,EAAG,IACnC,CAAE6B,KAAM,MAAOR,OAAQ,IAAIrB,EAAK,EAAG,IACnC,CAAE6B,KAAM,aAAcR,OAAQ,IAAIrB,EAAK,EAAG,IAC1C,CAAE6B,KAAM,aAAcR,OAAQ,IAAIrB,EAAK,EAAG,IAC1C,CAAE6B,KAAM,aAAcR,OAAQ,IAAIrB,EAAK,EAAG,IAC1C,CAAE6B,KAAM,aAAcR,OAAQ,IAAIrB,EAAK,EAAG,IAC1C,CAAE6B,KAAM,aAAcR,OAAQ,IAAIrB,EAAK,EAAG,IAC1C,CAAE6B,KAAM,SAAUR,OAAQ,IAAIrB,EAAK,EAAG,KAExCe,OAAQ,CAAC,IAAIf,EAAK,EAAG,GAAI,IAAIA,EAAK,EAAG,MAEvCqL,MAAO,IAAIxK,EAAM,CACfC,OAAQ,CACN,CAAEe,KAAM,MAAOR,OAAQ,IAAIrB,EAAK,EAAG,IACnC,CAAE6B,KAAM,MAAOR,OAAQ,IAAIrB,EAAK,EAAG,IACnC,CAAE6B,KAAM,MAAOR,OAAQ,IAAIrB,EAAK,EAAG,IACnC,CAAE6B,KAAM,MAAOR,OAAQ,IAAIrB,EAAK,EAAG,IACnC,CAAE6B,KAAM,aAAcR,OAAQ,IAAIrB,EAAK,EAAG,IAC1C,CAAE6B,KAAM,aAAcR,OAAQ,IAAIrB,EAAK,EAAG,IAC1C,CAAE6B,KAAM,aAAcR,OAAQ,IAAIrB,EAAK,EAAG,IAC1C,CAAE6B,KAAM,aAAcR,OAAQ,IAAIrB,EAAK,EAAG,IAC1C,CAAE6B,KAAM,aAAcR,OAAQ,IAAIrB,EAAK,EAAG,IAC1C,CAAE6B,KAAM,SAAUR,OAAQ,IAAIrB,EAAK,EAAG,KAExCe,OAAQ,CAAC,IAAIf,EAAK,EAAG,GAAI,IAAIA,EAAK,EAAG,MAGvCsL,MAAO,IAAIzK,EAAM,CACfC,OAAQ,CACN,CAAEe,KAAM,MAAOR,OAAQ,IAAIrB,EAAK,EAAG,IACnC,CAAE6B,KAAM,MAAOR,OAAQ,IAAIrB,EAAK,EAAG,IACnC,CAAE6B,KAAM,MAAOR,OAAQ,IAAIrB,EAAK,EAAG,IACnC,CAAE6B,KAAM,MAAOR,OAAQ,IAAIrB,EAAK,EAAG,IACnC,CAAE6B,KAAM,aAAcR,OAAQ,IAAIrB,EAAK,EAAG,IAC1C,CAAE6B,KAAM,aAAcR,OAAQ,IAAIrB,EAAK,EAAG,IAC1C,CAAE6B,KAAM,WAAYR,OAAQ,IAAIrB,EAAK,EAAG,IACxC,CAAE6B,KAAM,WAAYR,OAAQ,IAAIrB,EAAK,EAAG,IACxC,CAAE6B,KAAM,WAAYR,OAAQ,IAAIrB,EAAK,EAAG,IACxC,CAAE6B,KAAM,SAAUR,OAAQ,IAAIrB,EAAK,EAAG,KAExCe,OAAQ,CAAC,IAAIf,EAAK,EAAG,GAAI,IAAIA,EAAK,EAAG,MAGvCuL,aAAc,IAAI1K,EAAM,CACtBC,OAAQ,CACN,CAAEe,KAAM,MAAOR,OAAQ,IAAIrB,EAAK,EAAG,IACnC,CAAE6B,KAAM,MAAOR,OAAQ,IAAIrB,EAAK,EAAG,IACnC,CAAE6B,KAAM,MAAOR,OAAQ,IAAIrB,EAAK,EAAG,IACnC,CAAE6B,KAAM,MAAOR,OAAQ,IAAIrB,EAAK,EAAG,IACnC,CAAE6B,KAAM,aAAcR,OAAQ,IAAIrB,EAAK,EAAG,IAC1C,CAAE6B,KAAM,aAAcR,OAAQ,IAAIrB,EAAK,EAAG,IAC1C,CAAE6B,KAAM,WAAYR,OAAQ,IAAIrB,EAAK,EAAG,IACxC,CAAE6B,KAAM,WAAYR,OAAQ,IAAIrB,EAAK,EAAG,IACxC,CAAE6B,KAAM,WAAYR,OAAQ,IAAIrB,EAAK,EAAG,IACxC,CAAE6B,KAAM,SAAUR,OAAQ,IAAIrB,EAAK,EAAG,KAExCe,OAAQ,CAAC,IAAIf,EAAK,EAAG,GAAI,IAAIA,EAAK,EAAG,MAGvCwL,YAAa,IAAI3K,EAAM,CACrBC,OAAQ,CACN,CAAEe,KAAM,MAAOR,OAAQ,IAAIrB,EAAK,EAAG,IACnC,CAAE6B,KAAM,MAAOR,OAAQ,IAAIrB,EAAK,EAAG,IACnC,CAAE6B,KAAM,MAAOR,OAAQ,IAAIrB,EAAK,EAAG,IACnC,CAAE6B,KAAM,MAAOR,OAAQ,IAAIrB,EAAK,EAAG,IACnC,CAAE6B,KAAM,WAAYR,OAAQ,IAAIrB,EAAK,EAAG,IACxC,CAAE6B,KAAM,WAAYR,OAAQ,IAAIrB,EAAK,EAAG,IACxC,CAAE6B,KAAM,WAAYR,OAAQ,IAAIrB,EAAK,EAAG,IACxC,CAAE6B,KAAM,WAAYR,OAAQ,IAAIrB,EAAK,EAAG,IACxC,CAAE6B,KAAM,WAAYR,OAAQ,IAAIrB,EAAK,EAAG,IACxC,CAAE6B,KAAM,SAAUR,OAAQ,IAAIrB,EAAK,EAAG,KAExCe,OAAQ,CAAC,IAAIf,EAAK,EAAG,GAAI,IAAIA,EAAK,EAAG,MAGvCyL,QAAS,IAAI5K,EAAM,CACjBC,OAAQ,CACN,CAAEe,KAAM,MAAOR,OAAQ,IAAIrB,EAAK,EAAG,IACnC,CAAE6B,KAAM,MAAOR,OAAQ,IAAIrB,EAAK,EAAG,IACnC,CAAE6B,KAAM,WAAYR,OAAQ,IAAIrB,EAAK,EAAG,IACxC,CAAE6B,KAAM,WAAYR,OAAQ,IAAIrB,EAAK,EAAG,IACxC,CAAE6B,KAAM,WAAYR,OAAQ,IAAIrB,EAAK,EAAG,IACxC,CAAE6B,KAAM,aAAcR,OAAQ,IAAIrB,EAAK,EAAG,IAC1C,CAAE6B,KAAM,aAAcR,OAAQ,IAAIrB,EAAK,EAAG,IAC1C,CAAE6B,KAAM,aAAcR,OAAQ,IAAIrB,EAAK,EAAG,IAC1C,CAAE6B,KAAM,SAAUR,OAAQ,IAAIrB,EAAK,EAAG,KAExCe,OAAQ,CAAC,IAAIf,EAAK,EAAG,GAAI,IAAIA,EAAK,EAAG,OChG1B0L,GDyG8B,IAAI1L,EAAK,EAAG,GACxCA,EAAKW,MAGuB,IAAIX,EAAK,EAAG,GACxCA,EAAKU,KAGuB,IAAIV,EAAK,EAAG,GACxCA,EAAKU,KAGuB,IAAIV,EAAK,EAAG,GACxCA,EAAKY,KAK8B,IAAIZ,EAAK,EAAG,GAC/CA,EAAKU,KAGuB,IAAIV,EAAK,EAAG,GACxCA,EAAKY,KAKuB,IAAIZ,EAAK,EAAG,GACxCA,EAAKW,MAG0B,IAAIX,EAAK,EAAG,GAC3CA,EAAKQ,GAK8B,IAAIR,EAAK,EAAG,GAC/CA,EAAKY,KAGuB,IAAIZ,EAAK,EAAG,GACxCA,EAAKY,KAKuB,IAAIZ,EAAK,EAAG,GACxCA,EAAKW,MAG4B,IAAIX,EAAK,EAAG,GAC7CA,EAAKU,KAGuB,IAAIV,EAAK,EAAG,GACxCA,EAAKU,KAGuB,IAAIV,EAAK,EAAG,GACxCA,EAAKY,KChMF,WAAO,IAAD,EACWyG,mBAGzB,CACRrG,MAAOiK,EAAUC,OACjBhD,MAAOgC,EAAIe,EAAUC,UANC,mBACjBS,EADiB,KACLC,EADK,KASxB,OACE,yBAAK5F,UAAU,OACb,2CACA,kBAAC,EAAD,CACEoB,aAAc,SAACpG,GACb,IAAM6K,EAAS3B,EAAIlJ,GACJ,cAAX6K,GAAwBD,EAAa,CAAE5K,QAAOkH,MAAO2D,OAG7D,sCACCF,EACC,kBAAC,EAAD,CAAQ3K,MAAO2K,EAAW3K,MAAOkH,MAAOyD,EAAWzD,QACjD,QCjBU4D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.f6e0a5ce.chunk.js","sourcesContent":["export class Cell {\n  static UP: Cell = new Cell(0, -1);\n  static DOWN: Cell = new Cell(0, 1);\n  static RIGHT: Cell = new Cell(1, 0);\n  static LEFT: Cell = new Cell(-1, 0);\n\n  readonly x: number;\n  readonly y: number;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  add(cell: Cell): Cell {\n    return new Cell(this.x + cell.x, this.y + cell.y);\n  }\n\n  scalar_mul(scalar: number): Cell {\n    return new Cell(this.x * scalar, this.y * scalar);\n  }\n\n  equals(cell: Cell): boolean {\n    return this.x === cell.x && this.y === cell.y;\n  }\n\n  upper(num = 1): Cell {\n    return this.add(Cell.UP.scalar_mul(num));\n  }\n  downer(num = 1): Cell {\n    return this.add(Cell.DOWN.scalar_mul(num));\n  }\n  right(num = 1): Cell {\n    return this.add(Cell.RIGHT.scalar_mul(num));\n  }\n  left(num = 1): Cell {\n    return this.add(Cell.LEFT.scalar_mul(num));\n  }\n\n  toString(): string {\n    return `{x: ${this.x}, y: ${this.y}}`;\n  }\n  toDirectionString(): string {\n    if (this.x === 1) return 'RIGHT';\n    if (this.x === -1) return 'LEFT';\n    if (this.y === 1) return 'DOWN';\n    if (this.y === -1) return 'UP';\n    return '';\n  }\n}\n\nexport default Cell;\n","import { Block } from './Block';\nimport { Cell } from './Cell';\nimport { Move } from './Move';\n\ntype BoardType = (Block | undefined)[][];\ntype BlanksType = [Cell, Cell];\ntype BlocksType = Block[];\nexport class Board {\n  static WIDTH: number = 4;\n  static HEIGHT: number = 5;\n  //board[y][x]\n  readonly board: BoardType;\n  readonly blocks: BlocksType;\n  readonly blanks: BlanksType;\n\n  constructor({\n    blocks,\n    blanks,\n    board,\n  }: {\n    blocks: BlocksType;\n    blanks: BlanksType;\n    board?: BoardType;\n  }) {\n    this.blocks = blocks;\n    this.blanks = blanks;\n\n    if (board) {\n      this.board = board;\n    } else {\n      this.board = [];\n      for (let i = 0; i < Board.HEIGHT; i++) this.board[i] = [];\n      blocks.forEach((block) => {\n        this.board[block.ancher.y][block.ancher.x] = block;\n      });\n    }\n  }\n\n  clone() {\n    return new Board({\n      blocks: this.blocks.map((x) => Object.assign({}, x)),\n      blanks: this.blanks.concat() as BlanksType,\n    });\n  }\n\n  isValidCell(cell: Cell): boolean {\n    return (\n      cell.x >= 0 &&\n      cell.x < Board.WIDTH &&\n      cell.y >= 0 &&\n      cell.y < Board.HEIGHT\n    );\n  }\n\n  isSolved(): boolean {\n    const block = this.getBlock(new Cell(1, 3));\n    return block !== undefined && block.type === 'target';\n  }\n\n  getBlock(cell: Cell): Block | undefined {\n    if (this.isValidCell(cell)) return this.board[cell.y][cell.x];\n  }\n\n  getBlankIndex(cell: Cell): number {\n    return this.blanks.findIndex((x) => cell.equals(x));\n  }\n\n  moveBlock(move: Move): Board {\n    const new_board = this.clone();\n    new_board._bangMoveBlock(move);\n    return new_board;\n  }\n\n  //make bang changes to member\n  _bangMoveBlock(move: Move): void {\n    const ancher = move.block.ancher;\n    const block = this.getBlock(ancher);\n    if (block === undefined) return;\n\n    //move blanks\n    switch (block.type) {\n      case 'dot':\n        const target_blank_index = this.getBlankIndex(\n          ancher.add(move.direction)\n        );\n        this.blanks[target_blank_index] = ancher;\n        break;\n      case 'horizontal':\n        if (move.direction.x === -1) {\n          //left\n          const target_blank_index = this.getBlankIndex(ancher.left());\n          this.blanks[target_blank_index] = ancher.right();\n        } else if (move.direction.x === 1) {\n          //right\n          const target_blank_index = this.getBlankIndex(ancher.right(2));\n          this.blanks[target_blank_index] = ancher;\n        } else {\n          //up\n          //down\n          this.blanks[0] = ancher;\n          this.blanks[1] = this.blanks[0].right();\n        }\n        break;\n      case 'vertical':\n        if (move.direction.y === -1) {\n          //up\n          const target_blank_index = this.getBlankIndex(ancher.upper());\n          this.blanks[target_blank_index] = ancher.downer();\n        } else if (move.direction.y === 1) {\n          //down\n          const target_blank_index = this.getBlankIndex(ancher.downer(2));\n          this.blanks[target_blank_index] = ancher;\n        } else if (move.direction.x === -1) {\n          //left\n          this.blanks[0] = ancher;\n          this.blanks[1] = this.blanks[0].downer();\n        } else if (move.direction.x === 1) {\n          //right\n          this.blanks[0] = ancher;\n          this.blanks[1] = this.blanks[0].downer();\n        }\n        break;\n      case 'target':\n        if (move.direction.y === -1) {\n          //up\n          this.blanks[0] = ancher.downer();\n          this.blanks[1] = this.blanks[0].right();\n        } else if (move.direction.y === 1) {\n          //down\n          this.blanks[0] = ancher;\n          this.blanks[1] = this.blanks[0].right();\n        } else if (move.direction.x === -1) {\n          //left\n          this.blanks[0] = ancher.right();\n          this.blanks[1] = this.blanks[0].downer();\n        } else if (move.direction.x === 1) {\n          //right\n          this.blanks[0] = ancher;\n          this.blanks[1] = this.blanks[0].downer();\n        }\n        break;\n    }\n\n    //move block\n    const dest_ancher = ancher.add(move.direction);\n    this.board[ancher.y][ancher.x] = undefined;\n    this.board[dest_ancher.y][dest_ancher.x] = block;\n    block.ancher = dest_ancher;\n  }\n\n  getFlipped(): Board {\n    let flipped_blocks: Block[] = this.blocks.map(\n      (block): Block => {\n        if (block.type === 'dot' || block.type === 'vertical')\n          return {\n            type: block.type,\n            ancher: new Cell(3 - block.ancher.x, block.ancher.y),\n          };\n\n        switch (block.ancher.x) {\n          case 0:\n            return {\n              type: block.type,\n              ancher: new Cell(2, block.ancher.y),\n            };\n          case 1:\n            return Object.assign({}, block);\n          case 2:\n            return {\n              type: block.type,\n              ancher: new Cell(0, block.ancher.y),\n            };\n          default:\n            throw new Error('unexpedted block x coordinate');\n        }\n      }\n    );\n    let flipped_blanks: BlanksType = this.blanks.map(\n      (blank) => new Cell(3 - blank.x, blank.y)\n    ) as [Cell, Cell];\n\n    return new Board({ blocks: flipped_blocks, blanks: flipped_blanks });\n  }\n\n  calculateBlankCells(): Cell[] {\n    const blanks: Set<string> = new Set(\n      [...Array(Board.WIDTH).keys()]\n        .map((x) => [...Array(Board.HEIGHT).keys()].map((y) => `${x},${y}`))\n        .reduce((s, x) => [...s, ...x])\n    );\n\n    const deleteBlank = (cell: Cell): void => {\n      blanks.delete(`${cell.x},${cell.y}`);\n    };\n\n    this.blocks.forEach((block) => {\n      const ancher: Cell = block.ancher;\n      switch (block.type) {\n        case 'dot':\n          deleteBlank(ancher);\n          break;\n        case 'horizontal':\n          deleteBlank(ancher);\n          deleteBlank(ancher.right());\n          break;\n        case 'vertical':\n          deleteBlank(ancher);\n          deleteBlank(ancher.downer());\n          break;\n        case 'target':\n          deleteBlank(ancher);\n          deleteBlank(ancher.right());\n          deleteBlank(ancher.downer());\n          deleteBlank(ancher.right().downer());\n          break;\n      }\n    });\n\n    return Array.from(blanks.values()).map((cell) => {\n      const cells = cell.split(',');\n      return new Cell(parseInt(cells[0]), parseInt(cells[1]));\n    });\n  }\n\n  forEachBlock(\n    callback: (block: Block, index: number, self: Block[]) => void\n  ): void {\n    this.blocks.forEach(callback);\n  }\n}\n\nexport default Board;\n","import Block from '../solver/types/Block';\n\nexport const CELL_SIZE_PX = 50;\nexport const BLOCK_MARGIN_PX = 10;\nexport const BLOCK_COLORS: { [key in Block['type']]: string } = {\n  dot: '#35d0ba',\n  vertical: '#ffcd3c',\n  horizontal: '#ff9234',\n  target: '#d92027',\n};\n\nexport const BUTTON_CELL_SIZE_PX = CELL_SIZE_PX * 0.25;\n","import React, { FC, useCallback } from 'react';\nimport Block from '../../solver/types/Block';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\nimport { css } from '@emotion/core';\nimport styled from '@emotion/styled';\nimport {\n  BLOCK_MARGIN_PX,\n  BUTTON_CELL_SIZE_PX,\n  BLOCK_COLORS,\n} from '../style-const';\n\ntype BlockType = Block['type'];\n\nconst BlockIcon: FC<{ type: BlockType }> = ({ type }) => {\n  const width_px =\n    type === 'dot' || type === 'vertical'\n      ? BUTTON_CELL_SIZE_PX\n      : BUTTON_CELL_SIZE_PX * 2 + BLOCK_MARGIN_PX;\n  const height_px =\n    type === 'dot' || type === 'horizontal'\n      ? BUTTON_CELL_SIZE_PX\n      : BUTTON_CELL_SIZE_PX * 2 + BLOCK_MARGIN_PX;\n\n  const StyledIcon = styled.div`\n    width: ${width_px}px;\n    height: ${height_px}px;\n    background: ${BLOCK_COLORS[type]};\n  `;\n  return <StyledIcon />;\n};\n\nconst BUTTON_WIDTH = BUTTON_CELL_SIZE_PX * 6;\nconst BlockTypeButton: FC<{\n  type: BlockType;\n  is_active: boolean;\n  onClick: (type: BlockType) => void;\n}> = ({ onClick, type, is_active }) => {\n  const StyledButton = styled(Button)`\n    width: ${BUTTON_WIDTH}px;\n    height: ${BUTTON_CELL_SIZE_PX * 4}px;\n\n    ${is_active\n      ? css`\n          background: #0002 !important;\n        `\n      : null}\n  `;\n\n  return (\n    <StyledButton\n      variant=\"outlined\"\n      onClick={useCallback(() => onClick(type), [onClick, type])}\n    >\n      <BlockIcon type={type} />\n    </StyledButton>\n  );\n};\n\nexport const BlockTypeButtons: FC<{\n  type: BlockType;\n  onTypeSelect: (type: BlockType) => void;\n}> = ({ type, onTypeSelect }) => {\n  const block_types: BlockType[] = ['dot', 'horizontal', 'vertical', 'target'];\n  const buttons = block_types.map((x) => (\n    <BlockTypeButton\n      type={x}\n      is_active={type === x}\n      onClick={onTypeSelect}\n      key={x}\n    />\n  ));\n\n  return (\n    <ButtonGroup\n      orientation=\"vertical\"\n      variant=\"text\"\n      aria-label=\"vertical outlined primary button group\"\n    >\n      {buttons}\n    </ButtonGroup>\n  );\n};\n\nexport default BlockTypeButtons;\n","import React, { FC } from 'react';\nimport Block from '../../solver/types/Block';\nimport styled from '@emotion/styled';\n\nimport { CELL_SIZE_PX, BLOCK_COLORS, BLOCK_MARGIN_PX } from '../style-const';\n\nimport { keyframes, css } from '@emotion/core';\nimport Cell from '../../solver/types/Cell';\n\nconst getMoveKeyFlame = (direction: Cell) => keyframes`\n  0% {\n    transform: translate3d(0, 0, 0);\n  }\n  100% {\n    transform: translate3d(${\n      direction.x * (CELL_SIZE_PX + BLOCK_MARGIN_PX)\n    }px, ${direction.y * (CELL_SIZE_PX + BLOCK_MARGIN_PX)}px, 0); \n    opacity: 0;\n  }\n`;\n\nconst BlockView: FC<{\n  block: Block;\n  is_translucent?: boolean;\n  move_animation?: Cell;\n}> = ({ block, is_translucent, move_animation }) => {\n  const type = block.type;\n  const width_px =\n    type === 'dot' || type === 'vertical'\n      ? CELL_SIZE_PX\n      : CELL_SIZE_PX * 2 + BLOCK_MARGIN_PX;\n  const height_px =\n    type === 'dot' || type === 'horizontal'\n      ? CELL_SIZE_PX\n      : CELL_SIZE_PX * 2 + BLOCK_MARGIN_PX;\n\n  const StyledBlock = styled.div`\n    position: absolute;\n    top: ${BLOCK_MARGIN_PX +\n    (BLOCK_MARGIN_PX + CELL_SIZE_PX) * block.ancher.y}px;\n    left: ${BLOCK_MARGIN_PX +\n    (BLOCK_MARGIN_PX + CELL_SIZE_PX) * block.ancher.x}px;\n    width: ${width_px}px;\n    height: ${height_px}px;\n    background: ${BLOCK_COLORS[type]};\n    box-shadow: 0 3px 5px #0002, 0 1px 5px #0002;\n    border-radius: 3px;\n    opacity: ${is_translucent ? 0.5 : 1};\n    cursor: none;\n    pointer-events: none;\n    ${move_animation\n      ? css`\n          animation: ${getMoveKeyFlame(move_animation)} 1s ease infinite;\n        `\n      : null}\n  `;\n  return <StyledBlock />;\n};\n\nexport default BlockView;\n","import React, { FC, useCallback } from 'react';\nimport Board from '../../solver/types/Board';\nimport Move from '../../solver/types/Move';\nimport Block from '../../solver/types/Block';\nimport Cell from '../../solver/types/Cell';\nimport styled from '@emotion/styled';\nimport BlockView from './BlockView';\nimport { CELL_SIZE_PX, BLOCK_MARGIN_PX } from '../style-const';\n\nconst BoardView: FC<{\n  board: Board;\n  translucent_blocks?: Block[];\n  ghost_move?: Move;\n  className?: string;\n  onMouseUp?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  onCellMouseMove?: (cell: Cell) => void;\n}> = ({\n  board,\n  translucent_blocks,\n  ghost_move,\n  className,\n  onMouseUp,\n  onCellMouseMove,\n}) => {\n  const getBlockKey = (block: Block): string => block.type + block.ancher;\n  const blocks = board.blocks.map((x) => (\n    <BlockView block={x} key={getBlockKey(x)} />\n  ));\n\n  const width_px =\n    BLOCK_MARGIN_PX + (CELL_SIZE_PX + BLOCK_MARGIN_PX) * Board.WIDTH;\n  const height_px =\n    BLOCK_MARGIN_PX + (CELL_SIZE_PX + BLOCK_MARGIN_PX) * Board.HEIGHT;\n  const StyledBoard = styled.div`\n    position: relative;\n    width: ${width_px}px;\n    height: ${height_px}px;\n    border: solid 3px #aaa;\n    &::after {\n      content: '';\n      display: inline-block;\n      position: absolute;\n      top: ${height_px}px;\n      left: ${CELL_SIZE_PX + BLOCK_MARGIN_PX}px;\n      width: ${BLOCK_MARGIN_PX + (CELL_SIZE_PX + BLOCK_MARGIN_PX) * 2}px;\n      height: 3px;\n      background: #fff;\n    }\n  `;\n\n  const on_mouse_move = useCallback(\n    (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n      if (!e.currentTarget.getBoundingClientRect) return;\n\n      const current_target_rect = e.currentTarget.getBoundingClientRect();\n      const mouse_pos = {\n        x: e.clientX - current_target_rect.x,\n        y: e.clientY - current_target_rect.y,\n      };\n      const cell_x = Math.floor(\n        (mouse_pos.x - BLOCK_MARGIN_PX / 2) / (BLOCK_MARGIN_PX + CELL_SIZE_PX)\n      );\n      const cell_y = Math.floor(\n        (mouse_pos.y - BLOCK_MARGIN_PX / 2) / (BLOCK_MARGIN_PX + CELL_SIZE_PX)\n      );\n      const cell = new Cell(\n        cell_x < 0 ? 0 : cell_x > Board.WIDTH - 1 ? Board.WIDTH - 1 : cell_x,\n        cell_y < 0 ? 0 : cell_y > Board.HEIGHT - 1 ? Board.HEIGHT - 1 : cell_y\n      );\n      if (onCellMouseMove !== undefined) onCellMouseMove(cell);\n    },\n    [onCellMouseMove]\n  );\n\n  return (\n    <StyledBoard\n      className={className ? className : ''}\n      onMouseUp={onMouseUp}\n      onMouseMove={on_mouse_move}\n    >\n      {blocks}\n      {translucent_blocks\n        ? translucent_blocks.map((x) => (\n            <BlockView block={x} is_translucent={true} key={getBlockKey(x)} />\n          ))\n        : null}\n      {ghost_move ? (\n        <BlockView\n          block={ghost_move.block}\n          move_animation={ghost_move?.direction}\n        />\n      ) : null}\n    </StyledBoard>\n  );\n};\n\nexport default BoardView;\n","import React, { FC, useState, useCallback } from 'react';\nimport Board from '../../solver/types/Board';\nimport BlockTypeButtons from './BlockTypeButtons';\nimport Block from '../../solver/types/Block';\nimport Cell from '../../solver/types/Cell';\nimport BoardView from './BoardView';\n\nimport { throttle } from 'throttle-debounce';\nimport styled from '@emotion/styled';\nimport Button from '@material-ui/core/Button';\n\nconst BoardInput: FC<{\n  className?: string;\n  onBoardInput: (board: Board) => void;\n}> = ({ className, onBoardInput }) => {\n  const [board, setBoard] = useState<Board>(\n    new Board({\n      blocks: [],\n      blanks: [new Cell(0, 0), new Cell(0, 0)],\n    })\n  );\n  const [selected_type, setSelectedType] = useState<Block['type']>('dot');\n  const [hovered_cell, setHoveredCell] = useState<Cell>(new Cell(0, 0));\n\n  const InputView = styled.div`\n    display: flex;\n    justify-content: center;\n  `;\n\n  const SubmitButton = styled(Button)`\n    margin: 20px auto 0 !important;\n  `;\n\n  return (\n    <div className={`board_input ${className}`}>\n      <InputView>\n        <BlockTypeButtons\n          type={selected_type}\n          onTypeSelect={useCallback((type) => {\n            setSelectedType(type);\n          }, [])}\n        />\n        <BoardView\n          onMouseUp={() => {\n            setBoard(\n              new Board({\n                blocks: [\n                  ...board.blocks,\n                  { type: selected_type, ancher: hovered_cell },\n                ],\n                blanks: board.blanks,\n              })\n            );\n          }}\n          onCellMouseMove={useCallback(throttle(100, setHoveredCell), [])}\n          board={board}\n          translucent_blocks={[{ type: selected_type, ancher: hovered_cell }]}\n        />\n      </InputView>\n      <SubmitButton\n        disabled={board.calculateBlankCells().length !== 2}\n        variant=\"contained\"\n        onClick={() =>\n          onBoardInput(\n            new Board({\n              blocks: board.blocks,\n              blanks: board.calculateBlankCells() as [Cell, Cell],\n            })\n          )\n        }\n      >\n        solve!\n      </SubmitButton>\n    </div>\n  );\n};\n\nconst StyledBoardInput = styled(BoardInput)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport default StyledBoardInput;\n","import React, { FC, useState, useMemo } from 'react';\nimport Board from '../../solver/types/Board';\nimport Move from '../../solver/types/Move';\nimport BoardView from './BoardView';\nimport { Button } from '@material-ui/core';\nimport styled from '@emotion/styled';\n\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\nconst getCurrentBoard = (\n  board: Board,\n  moves: Move[],\n  current_index: number\n): Board =>\n  moves\n    .filter((_, i) => i < current_index)\n    .reduce((board: Board, move: Move): Board => board.moveBlock(move), board);\n\nconst Answer: FC<{ board: Board; moves: Move[] }> = ({ board, moves }) => {\n  const [current_move_index, setCurrentMoveIndex] = useState(0);\n  const current_board = useMemo(\n    () => getCurrentBoard(board, moves, current_move_index),\n    [board, moves, current_move_index]\n  );\n\n  const AnswerBoard = styled(BoardView)`\n    margin: 0 auto;\n  `;\n\n  const AnswerController = styled.div`\n    text-align: center;\n  `;\n\n  return (\n    <div className=\"answer\">\n      <AnswerBoard\n        board={current_board}\n        ghost_move={moves[current_move_index]}\n      />\n      <AnswerController>\n        <Button\n          disabled={current_move_index <= 0}\n          onClick={() => setCurrentMoveIndex(current_move_index - 1)}\n        >\n          <ArrowBackIosIcon />\n        </Button>\n        <span>\n          {current_move_index + 1} / {moves.length}\n        </span>\n        <Button\n          disabled={current_move_index >= moves.length - 1}\n          onClick={() => setCurrentMoveIndex(current_move_index + 1)}\n        >\n          <ArrowForwardIosIcon />\n        </Button>\n      </AnswerController>\n    </div>\n  );\n};\n\nexport default Answer;\n","import Block from './types/Block';\nimport Board from './types/Board';\nimport Move from './types/Move';\n\nexport type Hash = number;\n\nexport class Zobrist {\n  readonly randoms: number[];\n  readonly hashes: Set<Hash>;\n\n  constructor() {\n    // init random_table\n    this.randoms = [...Array(80).keys()].map((_) =>\n      parseInt((Math.random() * Math.pow(2, 32)) as any)\n    );\n    this.hashes = new Set();\n  }\n\n  // cellの座標とblockのtypeを引数として受け取り、\n  // 配列ramdoms[]の添字（どこにランダム生成した値が格納されているか）を返すメソッド\n  getRandomsIndex(block: Block): number {\n    const block_index = {\n      dot: 0,\n      horizontal: 1,\n      vertical: 2,\n      target: 3,\n    }[block.type];\n    const cell_index = block.ancher.y * Board.WIDTH + block.ancher.x;\n\n    return cell_index * 4 + block_index;\n  }\n\n  // boardのデータを引数として受け取り、そのデータを表すハッシュ値を返すメソッド\n  // 最初の一回のみ使用する\n  getHash(board: Board): Hash {\n    let hash = 0;\n    board.forEachBlock((block) => {\n      hash ^= this.randoms[this.getRandomsIndex(block)];\n    });\n    return hash;\n  }\n\n  getMovedHash(pre_hash: Hash, move: Move): Hash | undefined {\n    const current_block = move.block;\n    if (current_block === undefined) return undefined;\n    const moved_block: Block = {\n      ...current_block,\n      ancher: current_block.ancher.add(move.direction),\n    };\n    const hash =\n      pre_hash ^\n      this.randoms[this.getRandomsIndex(current_block)] ^\n      this.randoms[this.getRandomsIndex(moved_block)];\n\n    return hash;\n  }\n\n  add(hash: Hash): void {\n    this.hashes.add(hash);\n  }\n\n  has(hash: Hash): boolean {\n    return this.hashes.has(hash);\n  }\n}\n\nexport default Zobrist;\n","import Block from './types/Block';\nimport Board from './types/Board';\nimport Cell from './types/Cell';\nimport Move from './types/Move';\nimport Zobrist, { Hash } from './Zobrist';\n\nexport const areConnectedCells = (\n  cell1: Cell,\n  cell2: Cell\n): 'horizontal' | 'vartical' | false => {\n  if (cell1.upper().equals(cell2) || cell1.downer().equals(cell2)) {\n    return 'vartical';\n  } else if (cell1.right().equals(cell2) || cell1.left().equals(cell2)) {\n    return 'horizontal';\n  } else {\n    return false;\n  }\n};\n\nexport const calculatePossibleMoves = (board: Board): Move[] => {\n  let moves: Move[] = [];\n  const connectedCells = areConnectedCells(board.blanks[0], board.blanks[1]);\n  let blank1 = board.blanks[0],\n    blank2 = board.blanks[1];\n  if (board.blanks[0].x === board.blanks[1].x) {\n    if (board.blanks[0].y < board.blanks[1].y) {\n      blank1 = board.blanks[0];\n      blank2 = board.blanks[1];\n    } else if (board.blanks[0].y > board.blanks[1].y) {\n      blank1 = board.blanks[1];\n      blank2 = board.blanks[0];\n    }\n  } else if (board.blanks[0].x < board.blanks[1].x) {\n    blank1 = board.blanks[0];\n    blank2 = board.blanks[1];\n  } else if (board.blanks[0].x > board.blanks[1].x) {\n    blank1 = board.blanks[1];\n    blank2 = board.blanks[0];\n  }\n  if (connectedCells) {\n    //blank connected\n    if (connectedCells === 'horizontal') {\n      let block: Block | undefined;\n      // blank1のancherを基準に周りのcellを調べる\n      // 1\n      block = board.getBlock(blank1.left(2));\n      if (block !== undefined && block.type === 'horizontal') {\n        // ...push({block,})のblockは、block: block,...の略\n        moves.push({ block, direction: Cell.RIGHT });\n      }\n      // 2\n      block = board.getBlock(blank1.left(1));\n      if (block !== undefined && block.type === 'dot')\n        moves.push({ block, direction: Cell.RIGHT });\n      // 3\n      block = board.getBlock(blank1.upper(2));\n      if (\n        (block !== undefined && block.type === 'vertical') ||\n        (block !== undefined && block.type === 'target')\n      )\n        moves.push({ block, direction: Cell.DOWN });\n      // 4\n      block = board.getBlock(blank1.upper(1));\n      if (\n        (block !== undefined && block.type === 'dot') ||\n        (block !== undefined && block.type === 'horizontal')\n      )\n        moves.push({ block, direction: Cell.DOWN });\n      // 5\n      block = board.getBlock(blank1.downer(1));\n      if (\n        (block !== undefined && block.type === 'dot') ||\n        (block !== undefined && block.type === 'horizontal') ||\n        (block !== undefined && block.type === 'vertical') ||\n        (block !== undefined && block.type === 'target')\n      )\n        moves.push({ block, direction: Cell.UP });\n      // 6\n      block = board.getBlock(blank2.upper(2));\n      if (block !== undefined && block.type === 'vertical')\n        moves.push({ block, direction: Cell.DOWN });\n      // 7\n      block = board.getBlock(blank2.upper(1));\n      if (block !== undefined && block.type === 'dot')\n        moves.push({ block, direction: Cell.DOWN });\n      // 8\n      block = board.getBlock(blank2.downer(1));\n      if (\n        (block !== undefined && block.type === 'dot') ||\n        (block !== undefined && block.type === 'vertical')\n      )\n        moves.push({ block, direction: Cell.UP });\n      // 9\n      block = board.getBlock(blank2.right(1));\n      if (\n        (block !== undefined && block.type === 'dot') ||\n        (block !== undefined && block.type === 'horizontal')\n      )\n        moves.push({ block, direction: Cell.LEFT });\n    } else if (connectedCells === 'vartical') {\n      let block: Block | undefined;\n      // 1\n      block = board.getBlock(blank1.left(2));\n      if (\n        (block !== undefined && block.type === 'horizontal') ||\n        (block !== undefined && block.type === 'target')\n      ) {\n        moves.push({ block, direction: Cell.RIGHT });\n      }\n      // 2\n      block = board.getBlock(blank1.left(1));\n      if (\n        (block !== undefined && block.type === 'dot') ||\n        (block !== undefined && block.type === 'vertical')\n      )\n        moves.push({ block, direction: Cell.RIGHT });\n      // 3\n      block = board.getBlock(blank2.left(2));\n      if (block !== undefined && block.type === 'horizontal')\n        moves.push({ block, direction: Cell.RIGHT });\n      // 4\n      block = board.getBlock(blank2.left(1));\n      if (block !== undefined && block.type === 'dot')\n        moves.push({ block, direction: Cell.RIGHT });\n      // 5\n      block = board.getBlock(blank1.upper(2));\n      if (block !== undefined && block.type === 'vertical')\n        moves.push({ block, direction: Cell.DOWN });\n      // 6\n      block = board.getBlock(blank1.upper(1));\n      if (block !== undefined && block.type === 'dot')\n        moves.push({ block, direction: Cell.DOWN });\n      // 7\n      block = board.getBlock(blank2.downer(1));\n      if (\n        (block !== undefined && block.type === 'dot') ||\n        (block !== undefined && block.type === 'vertical')\n      )\n        moves.push({ block, direction: Cell.UP });\n      // 8\n      block = board.getBlock(blank1.right(1));\n      if (\n        (block !== undefined && block.type === 'dot') ||\n        (block !== undefined && block.type === 'horizontal') ||\n        (block !== undefined && block.type === 'vertical') ||\n        (block !== undefined && block.type === 'target')\n      )\n        moves.push({ block, direction: Cell.LEFT });\n      // 9\n      block = board.getBlock(blank2.right(1));\n      if (\n        (block !== undefined && block.type === 'dot') ||\n        (block !== undefined && block.type === 'horizontal')\n      )\n        moves.push({ block, direction: Cell.LEFT });\n    }\n  } else {\n    //blank separated\n    for (const blank of board.blanks) {\n      let block: Block | undefined;\n      // 1\n      block = board.getBlock(blank.left(2));\n      if (block !== undefined && block.type === 'horizontal') {\n        moves.push({ block, direction: Cell.RIGHT });\n      }\n      // 2\n      block = board.getBlock(blank.left(1));\n      if (block !== undefined && block.type === 'dot')\n        moves.push({ block, direction: Cell.RIGHT });\n      // 3\n      block = board.getBlock(blank.upper(2));\n      if (block !== undefined && block.type === 'vertical')\n        moves.push({ block, direction: Cell.DOWN });\n      // 4\n      block = board.getBlock(blank.upper(1));\n      if (block !== undefined && block.type === 'dot')\n        moves.push({ block, direction: Cell.DOWN });\n      // 5\n      block = board.getBlock(blank.downer(1));\n      if (\n        (block !== undefined && block.type === 'dot') ||\n        (block !== undefined && block.type === 'vertical')\n      )\n        moves.push({ block, direction: Cell.UP });\n      // 6\n      block = board.getBlock(blank.right(1));\n      if (\n        (block !== undefined && block.type === 'dot') ||\n        (block !== undefined && block.type === 'horizontal')\n      )\n        moves.push({ block, direction: Cell.LEFT });\n    }\n  }\n  return moves;\n};\n\ntype GameState = {\n  board: Board;\n  hash: Hash;\n  move_history: Move[];\n};\n\nexport const BFS = (board: Board): Move[] | 'no answer' => {\n  const zobrist = new Zobrist();\n\n  let current_game_states: GameState[] = [\n    {\n      board,\n      hash: zobrist.getHash(board),\n      move_history: [],\n    },\n  ];\n  if (board.isSolved()) return current_game_states[0].move_history;\n\n  zobrist.add(current_game_states[0].hash);\n  zobrist.add(zobrist.getHash(board.getFlipped()));\n\n  while (current_game_states.length !== 0) {\n    let next_game_states: GameState[] = [];\n\n    for (const game_state of current_game_states) {\n      const next_moves = calculatePossibleMoves(game_state.board);\n      for (const next_move of next_moves) {\n        const next_hash = zobrist.getMovedHash(game_state.hash, next_move);\n        if (next_hash === undefined) throw new Error('unexpected move');\n        // zobrist hash tableにあるか否か\n        if (!zobrist.has(next_hash)) {\n          zobrist.add(next_hash);\n          const moved_board = game_state.board.moveBlock(next_move);\n          zobrist.add(zobrist.getHash(moved_board.getFlipped()));\n\n          const next_state: GameState = {\n            board: moved_board,\n            hash: next_hash,\n            // game_state.move_historyを展開し、next_moveを加えて配列を作り直している\n            move_history: [...game_state.move_history, next_move],\n          };\n\n          if (next_state.board.isSolved()) return next_state.move_history;\n\n          next_game_states.push(next_state);\n        }\n      }\n    }\n\n    current_game_states = next_game_states;\n  }\n  return 'no answer';\n};\n\nexport default BFS;\n","import Board from './types/Board';\nimport Cell from './types/Cell';\nimport Move from './types/Move';\n\n//see also: https://www.npmjs.com/package/klotski\nexport const questions = {\n  //横刀立马 81moves\n  basic1: new Board({\n    blocks: [\n      { type: 'dot', ancher: new Cell(0, 4) },\n      { type: 'dot', ancher: new Cell(1, 3) },\n      { type: 'dot', ancher: new Cell(2, 3) },\n      { type: 'dot', ancher: new Cell(3, 4) },\n      { type: 'horizontal', ancher: new Cell(1, 2) },\n      { type: 'vertical', ancher: new Cell(0, 0) },\n      { type: 'vertical', ancher: new Cell(0, 2) },\n      { type: 'vertical', ancher: new Cell(3, 0) },\n      { type: 'vertical', ancher: new Cell(3, 2) },\n      { type: 'target', ancher: new Cell(1, 0) },\n    ],\n    blanks: [new Cell(1, 4), new Cell(2, 4)],\n  }),\n  //前呼后拥 22moves\n  easy1: new Board({\n    blocks: [\n      { type: 'dot', ancher: new Cell(0, 0) },\n      { type: 'dot', ancher: new Cell(1, 0) },\n      { type: 'dot', ancher: new Cell(2, 4) },\n      { type: 'dot', ancher: new Cell(3, 4) },\n      { type: 'horizontal', ancher: new Cell(0, 1) },\n      { type: 'horizontal', ancher: new Cell(0, 2) },\n      { type: 'horizontal', ancher: new Cell(0, 3) },\n      { type: 'horizontal', ancher: new Cell(2, 2) },\n      { type: 'horizontal', ancher: new Cell(2, 3) },\n      { type: 'target', ancher: new Cell(2, 0) },\n    ],\n    blanks: [new Cell(0, 4), new Cell(1, 4)],\n  }),\n  //前呼后拥 flipped 22moves\n  easy1flipped: new Board({\n    blocks: [\n      { type: 'dot', ancher: new Cell(2, 0) },\n      { type: 'dot', ancher: new Cell(3, 0) },\n      { type: 'dot', ancher: new Cell(0, 4) },\n      { type: 'dot', ancher: new Cell(1, 4) },\n      { type: 'horizontal', ancher: new Cell(2, 1) },\n      { type: 'horizontal', ancher: new Cell(0, 2) },\n      { type: 'horizontal', ancher: new Cell(0, 3) },\n      { type: 'horizontal', ancher: new Cell(2, 2) },\n      { type: 'horizontal', ancher: new Cell(2, 3) },\n      { type: 'target', ancher: new Cell(0, 0) },\n    ],\n    blanks: [new Cell(2, 4), new Cell(3, 4)],\n  }),\n  easy2: new Board({\n    blocks: [\n      { type: 'dot', ancher: new Cell(0, 0) },\n      { type: 'dot', ancher: new Cell(1, 0) },\n      { type: 'dot', ancher: new Cell(2, 4) },\n      { type: 'dot', ancher: new Cell(3, 4) },\n      { type: 'horizontal', ancher: new Cell(0, 1) },\n      { type: 'horizontal', ancher: new Cell(0, 3) },\n      { type: 'horizontal', ancher: new Cell(0, 4) },\n      { type: 'horizontal', ancher: new Cell(0, 2) },\n      { type: 'horizontal', ancher: new Cell(2, 3) },\n      { type: 'target', ancher: new Cell(2, 1) },\n    ],\n    blanks: [new Cell(2, 0), new Cell(3, 0)],\n  }),\n  //峰回路转 140moves\n  hard1: new Board({\n    blocks: [\n      { type: 'dot', ancher: new Cell(0, 0) },\n      { type: 'dot', ancher: new Cell(1, 0) },\n      { type: 'dot', ancher: new Cell(2, 0) },\n      { type: 'dot', ancher: new Cell(1, 4) },\n      { type: 'horizontal', ancher: new Cell(1, 3) },\n      { type: 'horizontal', ancher: new Cell(2, 4) },\n      { type: 'vertical', ancher: new Cell(3, 0) },\n      { type: 'vertical', ancher: new Cell(2, 1) },\n      { type: 'vertical', ancher: new Cell(3, 2) },\n      { type: 'target', ancher: new Cell(0, 1) },\n    ],\n    blanks: [new Cell(0, 3), new Cell(0, 4)],\n  }),\n  //峰回路转 flipped 140moves\n  hard1flipped: new Board({\n    blocks: [\n      { type: 'dot', ancher: new Cell(1, 0) },\n      { type: 'dot', ancher: new Cell(2, 0) },\n      { type: 'dot', ancher: new Cell(3, 0) },\n      { type: 'dot', ancher: new Cell(2, 4) },\n      { type: 'horizontal', ancher: new Cell(1, 3) },\n      { type: 'horizontal', ancher: new Cell(0, 4) },\n      { type: 'vertical', ancher: new Cell(0, 0) },\n      { type: 'vertical', ancher: new Cell(1, 1) },\n      { type: 'vertical', ancher: new Cell(0, 2) },\n      { type: 'target', ancher: new Cell(2, 1) },\n    ],\n    blanks: [new Cell(3, 3), new Cell(3, 4)],\n  }),\n  //走投无路\n  impossible1: new Board({\n    blocks: [\n      { type: 'dot', ancher: new Cell(2, 2) },\n      { type: 'dot', ancher: new Cell(2, 3) },\n      { type: 'dot', ancher: new Cell(0, 4) },\n      { type: 'dot', ancher: new Cell(3, 4) },\n      { type: 'vertical', ancher: new Cell(0, 0) },\n      { type: 'vertical', ancher: new Cell(0, 2) },\n      { type: 'vertical', ancher: new Cell(3, 0) },\n      { type: 'vertical', ancher: new Cell(3, 2) },\n      { type: 'vertical', ancher: new Cell(1, 2) },\n      { type: 'target', ancher: new Cell(1, 0) },\n    ],\n    blanks: [new Cell(1, 4), new Cell(2, 4)],\n  }),\n  // solved\n  solved1: new Board({\n    blocks: [\n      { type: 'dot', ancher: new Cell(1, 2) },\n      { type: 'dot', ancher: new Cell(0, 4) },\n      { type: 'vertical', ancher: new Cell(0, 1) },\n      { type: 'vertical', ancher: new Cell(2, 1) },\n      { type: 'vertical', ancher: new Cell(3, 1) },\n      { type: 'horizontal', ancher: new Cell(0, 0) },\n      { type: 'horizontal', ancher: new Cell(2, 0) },\n      { type: 'horizontal', ancher: new Cell(0, 1) },\n      { type: 'target', ancher: new Cell(1, 3) },\n    ],\n    blanks: [new Cell(3, 3), new Cell(3, 4)],\n  }),\n};\n\nexport const possible_moves: {\n  [key in 'basic1' | 'easy1' | 'easy2' | 'hard1' | 'impossible1']: Move[];\n} = {\n  basic1: [\n    {\n      block: { type: 'dot' as const, ancher: new Cell(0, 4) },\n      direction: Cell.RIGHT,\n    },\n    {\n      block: { type: 'dot' as const, ancher: new Cell(1, 3) },\n      direction: Cell.DOWN,\n    },\n    {\n      block: { type: 'dot' as const, ancher: new Cell(2, 3) },\n      direction: Cell.DOWN,\n    },\n    {\n      block: { type: 'dot' as const, ancher: new Cell(3, 4) },\n      direction: Cell.LEFT,\n    },\n  ],\n  easy1: [\n    {\n      block: { type: 'horizontal' as const, ancher: new Cell(0, 3) },\n      direction: Cell.DOWN,\n    },\n    {\n      block: { type: 'dot' as const, ancher: new Cell(2, 4) },\n      direction: Cell.LEFT,\n    },\n  ],\n  easy2: [\n    {\n      block: { type: 'dot' as const, ancher: new Cell(1, 0) },\n      direction: Cell.RIGHT,\n    },\n    {\n      block: { type: 'target' as const, ancher: new Cell(2, 1) },\n      direction: Cell.UP,\n    },\n  ],\n  hard1: [\n    {\n      block: { type: 'horizontal' as const, ancher: new Cell(1, 3) },\n      direction: Cell.LEFT,\n    },\n    {\n      block: { type: 'dot' as const, ancher: new Cell(1, 4) },\n      direction: Cell.LEFT,\n    },\n  ],\n  impossible1: [\n    {\n      block: { type: 'dot' as const, ancher: new Cell(0, 4) },\n      direction: Cell.RIGHT,\n    },\n    {\n      block: { type: 'vertical' as const, ancher: new Cell(1, 2) },\n      direction: Cell.DOWN,\n    },\n    {\n      block: { type: 'dot' as const, ancher: new Cell(2, 3) },\n      direction: Cell.DOWN,\n    },\n    {\n      block: { type: 'dot' as const, ancher: new Cell(3, 4) },\n      direction: Cell.LEFT,\n    },\n  ],\n};\n","import React, { FC, useState } from 'react';\nimport BoardInput from './BoardInput';\nimport Answer from './Answer';\nimport Board from '../../solver/types/Board';\nimport Move from '../../solver/types/Move';\nimport BFS from '../../solver/BFS';\nimport { questions } from '../../solver/sample-data';\n\nconst App: FC<{}> = () => {\n  const [bfs_result, setBFSResult] = useState<{\n    board: Board;\n    moves: Move[];\n  } | null>({\n    board: questions.basic1,\n    moves: BFS(questions.basic1) as Move[],\n  });\n\n  return (\n    <div className=\"App\">\n      <h2>Board Input</h2>\n      <BoardInput\n        onBoardInput={(board) => {\n          const result = BFS(board);\n          if (result !== 'no answer') setBFSResult({ board, moves: result });\n        }}\n      />\n      <h2>Answer</h2>\n      {bfs_result ? (\n        <Answer board={bfs_result.board} moves={bfs_result.moves} />\n      ) : null}\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './ui/component/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}